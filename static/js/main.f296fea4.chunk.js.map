{"version":3,"sources":["SortingVisualizer/SortingAlgorithms/Bubblesort.jsx","SortingVisualizer/SortingVisualizer.jsx","App.js","index.js"],"names":["Bubblesort","array","animations","i","length","j","animation","compare","swap","sorted","temp","push","SortingVisualizer","useState","setArray","arraySize","useEffect","resetArray","newArray","maxValue","window","innerHeight","getRandomInt","bars","document","getElementsByClassName","className","onClick","setTimeout","style","height","slice","animate","id","map","bar","index","width","getElementById","clientWidth","key","min","max","Math","ceil","floor","random","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.f296fea4.chunk.js","sourcesContent":["export default function Bubblesort(array) {\n  var animations = [];\n  for (var i = array.length - 1; i > 0; i--) {\n    for (var j = 0; j < i; j++) {\n      var animation = { compare: null, swap: null, sorted: false };\n      animation.compare = [j, j + 1];\n      if (array[j] > array[j + 1]) {\n        var temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n        animation.swap = [j, j + 1];\n      }\n      if (j + 1 >= i) {\n        animation.sorted = true;\n      }\n      animations.push(animation);\n    }\n  }\n  animations.push({ compare: [0, 0], swap: null, sorted: true });\n  return animations;\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./SortingVisualizer.css\";\nimport Bubblesort from \"./SortingAlgorithms/Bubblesort\";\n\nexport default function SortingVisualizer() {\n  const [array, setArray] = useState([]);\n  const [arraySize, setArraySize] = useState(10);\n\n  useEffect(() => {\n    resetArray();\n    // console.log(testSortingAlgorithm());\n  }, []);\n\n  const resetArray = () => {\n    var newArray = [];\n    var maxValue = window.innerHeight - 50;\n    var minValue = 10;\n\n    for (var i = 0; i < arraySize; i++) {\n      newArray.push(getRandomInt(minValue, maxValue));\n    }\n    setArray(newArray);\n    var bars = document.getElementsByClassName(\"bar\");\n    for (var i = 0; i < bars.length; i++) {\n      bars[i].className = \"bar\";\n    }\n  };\n\n  const animate = animations => {\n    var bars = document.getElementsByClassName(\"bar\");\n    for (var i = 0; i < animations.length; i++) {\n      const { compare, swap, sorted } = animations[i];\n      setTimeout(() => {\n        bars[compare[0]].className = \"bar comparing\";\n        bars[compare[1]].className = \"bar comparing\";\n        setTimeout(() => {\n          bars[compare[0]].className = \"bar\";\n          bars[compare[1]].className = \"bar\";\n          if (swap !== null) {\n            bars[swap[0]].style.height = array[swap[1]] + \"px\";\n            bars[swap[1]].style.height = array[swap[0]] + \"px\";\n            var temp = array[swap[0]];\n            array[swap[0]] = array[swap[1]];\n            array[swap[1]] = temp;\n            setArray(array.slice());\n          }\n          if (sorted) {\n            bars[compare[1]].className = \"bar sorted\";\n          }\n        }, 30);\n      }, i * 35);\n    }\n  };\n\n  const testSortingAlgorithm = () => {\n    var testSorted = Bubblesort(array.slice());\n    var jsSorted = array.slice().sort((a, b) => a - b);\n\n    if (testSorted.length !== jsSorted.length) return false;\n\n    for (var i = 0; i < array.length; i++) {\n      if (testSorted[i] !== jsSorted[i]) return false;\n    }\n    return true;\n  };\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => animate(Bubblesort(array.slice()))}>\n          Bubblesort\n        </button>\n        <button onClick={() => resetArray()}>Generate New Array</button>\n      </div>\n      <div id=\"bar-container\" className=\"bar-container\">\n        {array.map((bar, index) => (\n          <div\n            className=\"bar\"\n            style={{\n              height: bar + \"px\",\n              width:\n                (document.getElementById(\"bar-container\").clientWidth -\n                  2 * arraySize) /\n                  arraySize +\n                \"px\"\n            }}\n            key={index}\n          >\n            {(document.getElementById(\"bar-container\").clientWidth -\n              2 * arraySize) /\n              arraySize >\n            30\n              ? bar\n              : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\n","import React from \"react\";\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}